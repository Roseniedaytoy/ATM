#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>

struct Transaction
{
	char username[100];
	char password[100];
	int type;//输入0存钱，1取钱
	float amount;
	struct Transaction*next;

};
typedef struct Transaction Transaction;
Transaction*tHead=NULL;
Transaction*tTail=NULL;


struct Account
{
	float money;

	char username[100];
	char password[100];

	struct Account * next;
};
typedef struct Account Account;

Account * head=NULL;
Account * tail=NULL;

Account * curAccount=NULL;

//找到返回1，找不到返回0
int findAccount(Account a)
{
	Account * curP=head;
	while(curP!=NULL)
	{
		if((strcmp(curP->username,a.username)==0)&&(strcmp(curP->password,a.password)==0))
		{
			curAccount = curP;
			return 1;
		}
		curP=curP->next;
	}
	return 0;
}

void updatePassword()
{
	char oldPassword[100]={'\0'};
	printf("请输入旧密码：\n");
	
	scanf("%s",oldPassword);
	if(strcmp(oldPassword,curAccount->password)==0)
	{
		printf("请输入新密码：\n");
		scanf("%s",curAccount->password);
	}
	else
	{
		printf("密码错误，不能修改！\n");
	}

}

void saveMoney()
{
	printf("请输入存款金额：\n");
	float money;
	scanf("%f",&money);
	//判断合理性
	curAccount->money-=money;
	printf("存款成功！\n");

	

}
void drawMoney()
{
	printf("请输入取款金额：\n");
	float money;
	scanf("%f",&money);
	//判断合理性
	if(curAccount->money<money)
	{
	
		printf("对不起，不能取出！\n");

	}
	else
	{
		curAccount->money-=money;
		printf("取款成功！\n");

	}

}

void showMenu()
{
	int j;
	printf("存款请按0，取款请按1，修改密码请按2：\n");
	scanf("%d",&j);
	
	if(j==2)
	{
		updatePassword();
	}	
	else if(j==1)
	{
		drawMoney();
	}
	else if(j==0)
	{
		saveMoney();
	}
	printf("\n");
	system("cls");
}

void signIn()
{
	Account a;
	printf("请输入账号：");
	scanf("%s",a.username);

	printf("请输入密码：");
	scanf("%s",a.password);

	if(findAccount(a))
	{
		printf("登录成功\n");
		showMenu();
       	
	}

	else
	{
		printf("登录失败！\n");
	}
}

//加载成功返回1，加载失败返回0
int loadData()
{
	FILE* fp=fopen("D://atm.txt","r");
	if(fp==NULL)
	{
		return 0;
	}
	else
	{
		while(!feof(fp))
		{
			//创建结点(堆)
			Account * newNode=(Account *)malloc(sizeof(Account));
			//结点初始化
			newNode->next=NULL;
			fscanf(fp,"%s %s %f\n",newNode->username,newNode->password,&newNode->money);

			//添加结点到链表
			if(head==NULL)
			{
				head=newNode;
				tail=newNode;
			}
			else
			{
				tail->next=newNode;
				tail=newNode;
			}
		}
		fclose(fp);
		return 1;
	}
}

void printLinkedList()
{
	Account * curP=head;
	while(curP!=NULL)
	{
		printf("%s\t%s\n",curP->username,curP->password);
		curP=curP->next;
	}
}


int main()
{
	int status=loadData();
	if(status==1)
	{
		printf("加载成功!\n");
	}
	else
	{
		printf("加载失败!\n");
	}

	printLinkedList();

	signIn();
	time_t timestamp=time(NULL);
	printf("%ld",timestamp);

	return 0;
}
